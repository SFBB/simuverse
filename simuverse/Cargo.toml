[package]
name = "simuverse"
version = "0.2.0"
authors = ["Jinlei Li <jinleili0@outlook.com>"]
edition = "2021"
rust-version = "1.83"

[dependencies]
app-surface = "1.4.2"
# app-surface = { path = "../../idroid/wgpu-in-app/app-surface" }
bytemuck = { version = "1.21", features = ["derive", "min_const_generics"] }

egui = { git = "https://github.com/emilk/egui", rev = "cf965aa", default-features = false }
egui_extras = { git = "https://github.com/emilk/egui", package = "egui_extras", rev = "cf965aa" }
egui-wgpu = { git = "https://github.com/emilk/egui", package = "egui-wgpu", rev = "cf965aa" }
egui-winit = { git = "https://github.com/emilk/egui", package = "egui-winit", rev = "cf965aa", default-features = false }
# egui = { version="0.28.1", default-features = false }
# egui_extras = { version="0.28.1" }
# egui-wgpu = { version="0.28.1" }
# egui-winit = { version="0.28.1", default-features = false }

webbrowser = { version = "1.0.1" }
# 与 egui 中使用的版本对齐
winit = { version = "0.30.7" }
raw-window-handle = "0.6"
wgpu = { version = "24", features = ["fragile-send-sync-non-atomic-wasm"] }
glam = "0.29"
# syntax_highlighting 需要 enum-map
enum-map = { version = "2", features = ["serde"] }
env_logger = "0.10"
log = "0.4"
parking_lot = "0.12"
rand = "0.8"
# 为了让 rand 支持 web 环境
getrandom = { version = "0.2", features = ["js"] }

image = { version = "*" }
cfg-if = "1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
pollster = "0.3"
# truck dependencies
instant = { version = "0.1.13", features = ["now"] }
rustc-hash = "2.1"
truck-base = { version = "0.5" }
truck-meshalgo = { version = "0.4" }
truck-modeling = { version = "0.6" }
truck-polymesh = { version = "0.6" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
instant = { version = "0.1.13", features = ["now", "wasm-bindgen"] }
console_error_panic_hook = "0.1.7"
console_log = "1.0"
fern = "0.7"
js-sys = "0.3.77"
reqwest = "0.12"
wasm-bindgen = "0.2.100"
wasm-bindgen-futures = "0.4.50"
web-sys = { version = "0.3.77", features = [
    "Blob",
    "Document",
    "Location",
    'Element',
    'HtmlElement',
    "Node",
    "NodeList",
    "HtmlCanvasElement",
    "ImageBitmap",
    "ImageBitmapRenderingContext",
    "Url",
    "Window",
    "WorkerGlobalScope",
    "XmlHttpRequest",
] }
